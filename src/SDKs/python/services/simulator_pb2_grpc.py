# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from services import simulator_pb2 as services_dot_simulator__pb2


class SimulatorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Create = channel.unary_unary(
        '/roadwork.services.simulator_service.Simulator/Create',
        request_serializer=services_dot_simulator__pb2.SimulatorCreateRequest.SerializeToString,
        response_deserializer=services_dot_simulator__pb2.SimulatorCreateResponse.FromString,
        )
    self.Step = channel.unary_unary(
        '/roadwork.services.simulator_service.Simulator/Step',
        request_serializer=services_dot_simulator__pb2.SimulatorStepRequest.SerializeToString,
        response_deserializer=services_dot_simulator__pb2.SimulatorStepResponse.FromString,
        )
    self.Reset = channel.unary_unary(
        '/roadwork.services.simulator_service.Simulator/Reset',
        request_serializer=services_dot_simulator__pb2.SimulatorResetRequest.SerializeToString,
        response_deserializer=services_dot_simulator__pb2.SimulatorResetResponse.FromString,
        )
    self.Render = channel.unary_unary(
        '/roadwork.services.simulator_service.Simulator/Render',
        request_serializer=services_dot_simulator__pb2.SimulatorRenderRequest.SerializeToString,
        response_deserializer=services_dot_simulator__pb2.SimulatorRenderResponse.FromString,
        )
    self.Close = channel.unary_unary(
        '/roadwork.services.simulator_service.Simulator/Close',
        request_serializer=services_dot_simulator__pb2.SimulatorCloseRequest.SerializeToString,
        response_deserializer=services_dot_simulator__pb2.SimulatorCloseResponse.FromString,
        )
    self.ActionSpaceSample = channel.unary_unary(
        '/roadwork.services.simulator_service.Simulator/ActionSpaceSample',
        request_serializer=services_dot_simulator__pb2.SimulatorActionSpaceSampleRequest.SerializeToString,
        response_deserializer=services_dot_simulator__pb2.SimulatorActionSpaceSampleResponse.FromString,
        )
    self.ActionSpaceInfo = channel.unary_unary(
        '/roadwork.services.simulator_service.Simulator/ActionSpaceInfo',
        request_serializer=services_dot_simulator__pb2.SimulatorActionSpaceInfoRequest.SerializeToString,
        response_deserializer=services_dot_simulator__pb2.SimulatorActionSpaceInfoResponse.FromString,
        )
    self.ObservationSpaceInfo = channel.unary_unary(
        '/roadwork.services.simulator_service.Simulator/ObservationSpaceInfo',
        request_serializer=services_dot_simulator__pb2.SimulatorObservationSpaceInfoRequest.SerializeToString,
        response_deserializer=services_dot_simulator__pb2.SimulatorObservationSpaceInfoResponse.FromString,
        )
    self.MonitorStart = channel.unary_unary(
        '/roadwork.services.simulator_service.Simulator/MonitorStart',
        request_serializer=services_dot_simulator__pb2.BaseRequest.SerializeToString,
        response_deserializer=services_dot_simulator__pb2.BaseResponse.FromString,
        )
    self.MonitorStop = channel.unary_unary(
        '/roadwork.services.simulator_service.Simulator/MonitorStop',
        request_serializer=services_dot_simulator__pb2.BaseRequest.SerializeToString,
        response_deserializer=services_dot_simulator__pb2.BaseResponse.FromString,
        )


class SimulatorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Create(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Step(self, request, context):
    """Run one timestep of the environment's dynamics. When end of
    episode is reached, you are responsible for calling `reset()`
    to reset this environment's state.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Reset(self, request, context):
    """Resets the state of the environment and returns an initial observation.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Render(self, request, context):
    """Renders the environment.
    The set of supported modes varies per environment. (And some
    environments do not support rendering at all.) By convention,
    if mode is:
    - human: render to the current display or terminal and
    return nothing. Usually for human consumption.
    - rgb_array: Return an numpy.ndarray with shape (x, y, 3),
    representing RGB values for an x-by-y pixel image, suitable
    for turning into a video.
    - ansi: Return a string (str) or StringIO.StringIO containing a
    terminal-style text representation. The text can include newlines
    and ANSI escape sequences (e.g. for colors).
    Note:
    Make sure that your class's metadata 'render.modes' key includes
    the list of supported modes. It's recommended to call super()
    in implementations to use the functionality of this method.
    Args:
    mode (str): the mode to render with
    Example:
    class MyEnv(Env):
    metadata = {'render.modes': ['human', 'rgb_array']}
    def render(self, mode='human'):
    if mode == 'rgb_array':
    return np.array(...) # return RGB frame suitable for video
    elif mode == 'human':
    ... # pop up a window and render
    else:
    super(MyEnv, self).render(mode=mode) # just raise an exception
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Close(self, request, context):
    """Override close in your subclass to perform any necessary cleanup.
    Environments will automatically close() themselves when
    garbage collected or when the program exits.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ActionSpaceSample(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ActionSpaceInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ObservationSpaceInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def MonitorStart(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def MonitorStop(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SimulatorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Create': grpc.unary_unary_rpc_method_handler(
          servicer.Create,
          request_deserializer=services_dot_simulator__pb2.SimulatorCreateRequest.FromString,
          response_serializer=services_dot_simulator__pb2.SimulatorCreateResponse.SerializeToString,
      ),
      'Step': grpc.unary_unary_rpc_method_handler(
          servicer.Step,
          request_deserializer=services_dot_simulator__pb2.SimulatorStepRequest.FromString,
          response_serializer=services_dot_simulator__pb2.SimulatorStepResponse.SerializeToString,
      ),
      'Reset': grpc.unary_unary_rpc_method_handler(
          servicer.Reset,
          request_deserializer=services_dot_simulator__pb2.SimulatorResetRequest.FromString,
          response_serializer=services_dot_simulator__pb2.SimulatorResetResponse.SerializeToString,
      ),
      'Render': grpc.unary_unary_rpc_method_handler(
          servicer.Render,
          request_deserializer=services_dot_simulator__pb2.SimulatorRenderRequest.FromString,
          response_serializer=services_dot_simulator__pb2.SimulatorRenderResponse.SerializeToString,
      ),
      'Close': grpc.unary_unary_rpc_method_handler(
          servicer.Close,
          request_deserializer=services_dot_simulator__pb2.SimulatorCloseRequest.FromString,
          response_serializer=services_dot_simulator__pb2.SimulatorCloseResponse.SerializeToString,
      ),
      'ActionSpaceSample': grpc.unary_unary_rpc_method_handler(
          servicer.ActionSpaceSample,
          request_deserializer=services_dot_simulator__pb2.SimulatorActionSpaceSampleRequest.FromString,
          response_serializer=services_dot_simulator__pb2.SimulatorActionSpaceSampleResponse.SerializeToString,
      ),
      'ActionSpaceInfo': grpc.unary_unary_rpc_method_handler(
          servicer.ActionSpaceInfo,
          request_deserializer=services_dot_simulator__pb2.SimulatorActionSpaceInfoRequest.FromString,
          response_serializer=services_dot_simulator__pb2.SimulatorActionSpaceInfoResponse.SerializeToString,
      ),
      'ObservationSpaceInfo': grpc.unary_unary_rpc_method_handler(
          servicer.ObservationSpaceInfo,
          request_deserializer=services_dot_simulator__pb2.SimulatorObservationSpaceInfoRequest.FromString,
          response_serializer=services_dot_simulator__pb2.SimulatorObservationSpaceInfoResponse.SerializeToString,
      ),
      'MonitorStart': grpc.unary_unary_rpc_method_handler(
          servicer.MonitorStart,
          request_deserializer=services_dot_simulator__pb2.BaseRequest.FromString,
          response_serializer=services_dot_simulator__pb2.BaseResponse.SerializeToString,
      ),
      'MonitorStop': grpc.unary_unary_rpc_method_handler(
          servicer.MonitorStop,
          request_deserializer=services_dot_simulator__pb2.BaseRequest.FromString,
          response_serializer=services_dot_simulator__pb2.BaseResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'roadwork.services.simulator_service.Simulator', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
